% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trend_lmer.R
\name{trend_lmer}
\alias{trend_lmer}
\title{trend_lmer: Fit random effects model with lmer and return results of interest}
\usage{
trend_lmer(
  df,
  x = "cycle",
  y,
  ID = "Plot_Name",
  random_type = c("intercept", "slope", "custom"),
  random_formula = NA
)
}
\arguments{
\item{df}{Data frame containing an ID column that identifies each sample unit (e.g., Plot_Name), a column containing a time
variable, and at least one column with a response variable.}

\item{x}{Quoted time variable for trend analysis. Default is "cycle", but can also model by year. Must be numeric.}

\item{y}{Quoted response variable in the data frame. Must be numeric}

\item{ID}{Quoted name of column containing site or plot IDs. Default is "Plot_Name", and assumes the first 4 characters
are a park code.}

\item{random_type}{Specify "intercept", "slope", or "custom". The intercept option (default) will fit a random intercept model
with (1|ID) as random component. The slope option will fit a random slope model with (1 + x|ID) as the random component.
If "custom" is used, must also specify random_formula.}

\item{random_formula}{If random_type = "custom", specify the random effects formula for the model in quotes. Otherwise leave blank.}
}
\description{
Fit random effects model in lmer, and return fixed effects intercept and slope and predicted responses for each
time step (i.e. cycle or year) represented in the data. This is mostly an internal function run within case_boot_lmer(),
but can be used as a stand alone function.
}
\examples{
\dontrun{

park = rep(c("APRK", "BPRK", "CPRK"), each = 30)
plot_name = paste(park, sprintf("\%02d", rep(c(1:10), each = 3)), sep = "-")
cycle = rep(1:3, times = 30)
resp = runif(90, 0, 10)

test_df <- data.frame(park, plot_name, cycle, resp)
test_df$group = ifelse(as.numeric(substr(test_df$plot_name, 5, 6)) \%\% 2, "GRP.1", "GRP.2")

# random slope model
mod <- trend_lmer(test_df, x = "cycle", y = "resp", ID = "plot_name", random_type = "slope")

# custom random effects model for group = GRP.1 with plot nested within park

mod2 <- trend_lmer(test_df \%>\% filter(group == "GRP.1"), x = "cycle", y = "resp", ID = "plot_name",
  random_type = "custom", random_formula = "(1|park/plot_name)")
}

}
