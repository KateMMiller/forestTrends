% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_slopes.R
\name{plot_slopes}
\alias{plot_slopes}
\title{plot_slopes: Plots slopes and 95\% CIs using output from case_boot_lmer}
\usage{
plot_slopes(
  df,
  ylabel,
  order = NA,
  group = NA,
  sign_only = FALSE,
  legend_position = "none"
)
}
\arguments{
\item{df}{Data frame containing a column called Plot_Name, a column called cycle, and a column with at least one
response variable. If Unit_Code is in the data frame, then a facet by park will be plotted.}

\item{ylabel}{Quoted title for y axis.}

\item{order}{Quoted column plot will sort by if specified.}

\item{group}{Group to color code by. If not specified, all points and lines will be black. If "Network" is specified,
then points and lines will be color coded by network, where ERMN is blue, MIDN is orange, NCRN is yellow, and NETN is green.}

\item{sign_only}{TRUE/FALSE. Denotes whether to plot all trends (FALSE; Default) or only significant trends (TRUE).}

\item{legend_position}{Quoted position for legend following ggplot positions. Default is 'none'.}
}
\description{
Function plots the slopes from case_boot_lmer output
}
\examples{
\dontrun{
#----- Example if running for first time -----

library(forestTrends)
library(tidyverse)
#----- Example if running for first time -----
fake_2pk <- data.frame(Plot_Name = c(rep(paste0(rep("APRK-", 12), sprintf("\%02d", 1:12)), each = 3),
                                     rep(paste0(rep("BPRK-", 40), sprintf("\%02d", 13:53)), each = 3)),
                     Park = c(rep("APRK", 36), rep("BPRK", 123)),
                       cycle = rep(1:3, times = 53),
                       resp1 = runif(159, 0, 30))

fake_2pk$resp2 <- 1 + fake_2pk$cycle * 0.5 + rnorm(159)



# Run case_boot_lmer iterating on park and response variable
boot2 <- map2_df(rep(c("APRK", "BPRK"), each = 2), rep(c('resp1', 'resp2'), times = 2),
                 function(park, y){case_boot_lmer(df = fake_2pk \%>\% filter(Park == park),
                                                  x = "cycle", y = y, ID = "Plot_Name",
                                                  random_type = 'intercept',
                                                  num_reps = 100, chatty = TRUE) \%>\%
                     mutate(park = paste(park), resp = paste(y))})


# Plot results
# Mostly default settings
plot_slopes(boot2 \%>\% filter(resp == "resp2"), ylabel = 'Response', sign_only = TRUE)

# Order parks different than alphabetical
boot2$park_ord <- factor(boot2$park, levels = c("BPRK", "APRK"))
plot_slopes(boot2, ylabel = 'Response', order = 'park_ord')

# Color code by network
boot2$Network <- ifelse(boot2$park == "APRK", "ERMN", "MIDN")
plot_slopes(boot2, ylabel = 'Response',  order = 'park_ord', group = "Network")


}
}
