% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/case_boot_sample.R
\name{case_boot_sample}
\alias{case_boot_sample}
\title{case_boot_sample: bootstrap resampling function}
\usage{
case_boot_sample(
  df,
  x = "cycle",
  y,
  ID = "Plot_Name",
  model_type = c("lmer", "loess"),
  random_type = c("intercept", "slope", "custom"),
  random_formula = NA,
  span = NA_real_,
  degree = 1,
  sample = TRUE,
  sample_num = 1
)
}
\arguments{
\item{df}{Data frame containing a column called Plot_Name, a column called cycle, and a column with at least one
response variable.}

\item{x}{Quoted time variable for trend analysis. Default is "cycle", but can also model by year. Must be numeric.}

\item{y}{Quoted response variable in the data frame.}

\item{ID}{Quoted name of column containing site or plot IDs. Default is "Plot_Name", and assumes the first 4 characters
are a park code.}

\item{model_type}{Options are "lmer" (Default) or "loess".}

\item{random_type}{For model_type = "lmer, specify "intercept", "slope", or "custom". The intercept option (default) will fit a random
intercept on plot with, e.g., (1|Plot_Name), as random factor. The slope option will fit a random slope model with, e.g.,
(1 + cycle|Plot_Name), as random factor}

\item{random_formula}{If random_type = "custom", must specify the random effects formula for the model in quotes. Otherwise leave blank.}

\item{span}{numeric value that controls the degree of smoothing. Smaller values (e.g., 0.1) result in less smoothing,
and possibly over-fitting the curve. Higher values (e.g., 0.9) result is more smoothing and possibly under-fitting.
You can calculate the number of time steps to include in the smoothing window by dividing p/n, where p is number of plots
you want to be included per window and n is number of timesteps in the data. When plotting years, knowing that panels include
4 years, it is generally safe to assume a linear response between 2 full cycles, and therefore use a span of 8/n. Note that
if you specify degree = 1, then loess assumes a linear relationship within each span. If no span is specified, then
fANCOVA::loess.as() will be used to determine the optimum span (Note: user specified is preferred).}

\item{degree}{order of polynomial to fit. Values of 1 (Default) is linear, 2 is quadratic, etc. Degrees of 1 or 2 are
generally recommended, depending on how wavy the line should to be.}

\item{sample}{TRUE or FALSE. TRUE (default) will generate a bootstrapped sample of the specified data frame. FALSE will
run trend_lmer() on the original dataset.}

\item{sample_num}{Used for iteration to indicate the replicate number of the bootstrap. Do not need to specify if not
running within case_boot_lmer().}
}
\description{
Bootstrap resampling function that creates a bootstrapped sample of plots with replacement and
returns model output from trend_lmer() for that sample. This is mostly an internal function run within case_boot_lmer(),
but can be used as a stand alone function.
}
\examples{
\dontrun{

fake_df <- data.frame(Plot_Name = rep(paste0(rep("PARK.", 9), 1:9), each = 3),
                      cycle = rep(1:3, times = 9),
                      resp = runif(27, 0, 20))

boot_ex <- case_boot_sample(fake_df, x = "cycle", y = "resp", ID = "Plot_Name",
  model_type = 'lmer', random_type = "intercept", sample = TRUE)

boot_l <- case_boot_sample(fake_df, x = "cycle", y = "resp", ID = "Plot_Name",
  model_type = 'loess', span = 1, sample = TRUE)
}

}
